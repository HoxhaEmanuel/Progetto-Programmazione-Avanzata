services:
  postgres:
    image: postgres:latest
    container_name: crownsourcing_postgres_db
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - crownsourcing_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend_service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: crownsourcing_backend
    env_file:
      - .env
    ports:
      - "${PORT}:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - crownsourcing_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  crownsourcing_network:
    driver: bridge